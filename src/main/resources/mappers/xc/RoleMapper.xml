<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace:命名空间 对应一个dao层的全路径 -->
<mapper namespace="com.zzxy.xc.dao.RoleDao">
	<sql id="queryUsername">
		<where>
			<if test="name !=null and name !=''">
				name like concat("%", #{name}, "%")
			</if>
		</where>
	</sql>
	<select id="findRole" resultType="com.zzxy.xc.entity.Role">
		select * from xc_roles
		<include refid="queryUsername"/>
		order by createdTime
	</select>
	<insert id="insertRole" parameterType="com.zzxy.xc.entity.Role" keyProperty="id" useGeneratedKeys="true">
		insert into xc_roles values(null,#{name},#{note},now(),#{createdUser},now(),#{modifiedUser})
	</insert>
	<!-- resultType:返回值类型
		resultMap:映射，与resultMap标签的id属性值相同
	 -->
	<select id="findRoleMenuIds" resultMap="roleMenuVo">
		select id,name,note from xc_roles where id = #{id}
	</select>

	<!-- type：返回值类型 -->
	<resultMap type="com.zzxy.xc.vo.RoleMenuVO" id="roleMenuVo">
		<!-- property：对应实体类的属性，一般是主键属性
         column：字段名-->
		<id property="id" column="id"/>
		<!-- SysRoleMenuVo()中一个id对应多个menuId，像这种1对多的情况要用collection标签
         property:查出来的值注入到指定的属性中 conlumn:根据该指定字段去查
         select:dao接口全路径+方法，指定去这个地方查询
         association:1对1   collection:1对多
         -->
		<collection property="menuIds" column="id"
					select="com.zzxy.xc.dao.RoleMenuDao.findMenuIdsByRoleId"></collection>
	</resultMap>
	<!--通过角色修改菜单！-->
	<update id="updateRoleById">
		update xc_roles set name=#{name},note=#{note},modifiedUser=now(),modifiedTime=now() where id=#{id}
	</update>
</mapper>